library(ggvis) #Data visulization
library(psych) #Scatterplot matrix
library(knitr) #html table
library(dplyr)
library(neuralnet) #artifical neural network 


concrete <- read.csv(file = "concrete.csv")
knitr::kable(head(concrete), caption = "Partial Table Preview")
str(concrete)

#Traditional Normalization
normalize <- function(x){
  return ((x - min(x))/(max(x) - min(x) ))
}

concrete_norm <- as.data.frame(lapply(concrete, normalize))

#A preview of the normalized concrete dataset:
kable(round(head(concrete_norm), digits = 3), caption = "Normalized Data Preview")

#Data Preparation
#training set
concrete_train <- concrete_norm[1:773, ]

#test set
concrete_test <- concrete_norm[774:1030, ]

#Model Training
#Build a neural network with one hidden layer 
concrete_model <- neuralnet(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age , data = concrete_train, hidden = 1)

#Visualizing Neural Network
plot(concrete_model)

#Model Evaluation
#building the predictor, exclude the target variable column
model_results <- neuralnet::compute(concrete_model, concrete_test[1:8])

#store the net.results column 
predicted_strength <- model_results$net.result

#Model Accuracy
cor(predicted_strength, concrete_test$strength)

#Improving the Model
#building the new model
concrete_model2 <- neuralnet(strength ~ cement + slag + ash + water + superplastic + coarseagg + fineagg + age, data = concrete_train, hidden = 5 )

#Visualizing the Improved Neural Network
plot(concrete_model2)

#Implementing the Improved Neural Network
#nuilding the new predictor
model_results2 <- neuralnet::compute(concrete_model2, concrete_test[1:8])

#storing the results
predicted_strength2 <- model_results2$net.result

#Evaluating New Model
cor(predicted_strength2, concrete_test$strength)
